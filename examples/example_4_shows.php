<?php

/***************************************************************************************************
 * Example 4: Shows
 *
 * Groups the data into shows which contain characters which contain pets. Also contains a lookup
 * table of all pets.
 *
 * Note: The examples work with data from the CSV file examples/data/shows.csv. Take a look at the
 * contents of this file to get a feel for the data.
 *
 * The shows.csv file contains these columns:
 *     showId, characterId, petId, petTypeId, show, character, petName, petType
 *
 * When read from the csv_to_array() function, the result is an array of associative arrays with
 * a member for each column. Somthing like:
 *
 *     array(
 *         [0] => array(
 *             'showId' => 1,
 *             'characterId' => 1,
 *     ...
 *
 * This could just as easily be a fetched result set or any other array of arrays or objects.
 **************************************************************************************************/

use AmericanReading\Restructure\Item\CompoundItem;
use AmericanReading\Restructure\Item\MapItem;
use AmericanReading\Restructure\Item\SetItem;

// Autoloader for examples. You should use vendor/autoload.php generated by Composer.
require_once('lib/autoload.php');
require_once('lib/csv_to_array.php');

// Read the data from the CSV as a list of associative arrays.
// This could just as easily be a fetched result set or any other array of arrays or objects.
$rows = csv_to_array('data/shows.csv');

$pet = new CompoundItem(
    array(
        array('petId', null, 'intval'),
        'petName',
        'petType'
    )
);

$character = new CompoundItem(
    array(
        array('characterId', null, 'intval'),
        array('name', 'character'),
        array('pets', new SetItem($pet, 'petId'))
    )
);

$show = new CompoundItem(
    array(
        array('showId', null, 'intval'),
        array('name', 'show'),
        array('characters', new SetItem($character, 'characterId'))
    )
);

$top = new CompoundItem(
    array(
        array('shows', new SetItem($show, 'showId')),
        array('allPets', new MapItem($pet, 'petId'))
    )
);

$data = $top->readAll($rows);
print json_encode($data);
